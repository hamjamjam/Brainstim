function [Rval,Pval,Pval2,R,P,idx1,R2,P2,idx2,s,Ytest] = correlationCoefficient(features,sham,SRvsNoSR,Xtest,YPredicted,Ytest,featuresTable)

%Would be much better if this was in a for loop
%% Setting up a matrix that can be indexed later

% This is a matrix where the first element in the 1st column is the
% entire 2nd column of 'features' and the first element of the 2nd column is
% the entire 3rd column of 'features'. This is useful in plotting the
% significant correlations

CorrelationMatrix{1,1} = features(:,2);
CorrelationMatrix{1,2} = features(:,3);
CorrelationMatrix{2,1} = features(:,2);
CorrelationMatrix{2,2} = features(:,4);
CorrelationMatrix{3,1} = features(:,2);
CorrelationMatrix{3,2} = features(:,5);
CorrelationMatrix{4,1} = features(:,2);
CorrelationMatrix{4,2} = features(:,6);

CorrelationMatrix{5,1} = features(:,3);
CorrelationMatrix{5,2} = features(:,4);
CorrelationMatrix{6,1} = features(:,3);
CorrelationMatrix{6,2} = features(:,5);
CorrelationMatrix{7,1} = features(:,3);
CorrelationMatrix{7,2} = features(:,6);

CorrelationMatrix{8,1} = features(:,4);
CorrelationMatrix{8,2} = features(:,5);
CorrelationMatrix{9,1} = features(:,4);
CorrelationMatrix{9,2} = features(:,6);

CorrelationMatrix{10,1} = features(:,5);
CorrelationMatrix{10,2} = features(:,6);

%% Finding correlations between features

%The output from the corrcoef function is a 2x2 matrix of r-values and a
%2x2 matrix of p-values. [R{#},P{#}] is putting the r-matrix into a cell in
%R and the p-matrix into a cell in P and creating an array of matrices. 
%[R,P] = corrcoef(features(:,2),VAL1,features(:,3),VAL2,features(:,4),VAL3,features(:,5),VAL4,features(:,6),VAL5)
% Correlation between 2nd feature and all others
[R{1},P{1}] = corrcoef(features(:,2),features(:,3));
[R{2},P{2}] = corrcoef(features(:,2),features(:,4)); 
[R{3},P{3}] = corrcoef(features(:,2),features(:,5));
[R{4},P{4}] = corrcoef(features(:,2),features(:,6));


% Correlation between 3rd feature and all others
[R{5},P{5}] = corrcoef(features(:,3),features(:,4));
[R{6},P{6}] = corrcoef(features(:,3),features(:,5));
[R{7},P{7}] = corrcoef(features(:,3),features(:,6));

% Correlation between 4th feature and all others
[R{8},P{8}] = corrcoef(features(:,4),features(:,5));
[R{9},P{9}] = corrcoef(features(:,4),features(:,6)); 


% Correlation between 5th feature and all others
[R{10},P{10}] = corrcoef(features(:,5),features(:,6));

% R output is a symmetric matrix so only taking the most important value from each. Looks like (1,R;R,1)
% This is saying to set the first element of the Rval array equal to the 2nd element in the first row of 
% the matrix in the first cell of R'
Rval(1) = R{1}(1,2);
Rval(2) = R{2}(1,2);
Rval(3) = R{3}(1,2);
Rval(4) = R{3}(1,2);
Rval(5) = R{5}(1,2);
Rval(6) = R{6}(1,2);
Rval(7) = R{7}(1,2);
Rval(8) = R{8}(1,2);
Rval(9) = R{9}(1,2);
Rval(10) = R{10}(1,2);

% P is a symmetric matrix also, Looks like (1,P;P,1)
Pval(1) = P{1}(1,2);
Pval(2) = P{2}(1,2);
Pval(3) = P{3}(1,2);
Pval(4) = P{4}(1,2);
Pval(5) = P{5}(1,2);
Pval(6) = P{6}(1,2);
Pval(7) = P{7}(1,2);
Pval(8) = P{8}(1,2);
Pval(9) = P{9}(1,2);
Pval(10) = P{10}(1,2);

%% Indexing significant correlations
% Find the location of any value smaller than 0.05 in the Pval matrix 
for i = 1: length(Pval)
    [idx1,num1] = find(Pval(:) < 0.05);
end

%% Plotting the correlated features
% %corrplot(features(:,2:end))
 [R,P] = corrplot(features(:,2),features(:,3),features(:,4),features,'tail','right');
%Plot significant correlations based on the indexing found above. 
% Green dots mean there is underlying SR, blue means no SR

%commented this section so graphs don't pop up every time
% for i = 1:length(idx1)
%        figure()
%        A = CorrelationMatrix{idx1(i),1}; % the y-axis 
%        B = CorrelationMatrix{idx1(i),2}; % the x-axis
%        [~,ax] = gplotmatrix(A,B,SRvsNoSR(:)); % categorizing them based on if they have SR or not
%        lsline(ax) % trend lines for each color
% % Have not been able to work out how to set it up so the axes labels change every time
% %        format short g
% %        str1 = sprintf('feature %.f',features(:,HelpfulMatrix{idx1(i),1}));
% %        str2 = sprintf('feature %.f',features(:,HelpfulMatrix{features(i),2}))
% %        title(str,'FontSize',12);
% %        ax(1,1).YLabel = str1;
% %        ax(1,1).XLabel = str2;
%      
% end

%% Correlation between SR and Each Feature
% s = string(YPredicted);
% YPredict = double(s);
s = string(Ytest);
Ytest = double(s);

    for i = 1:5
        [R2{i},P2{i}] = corrcoef(Ytest(:),Xtest(:,i)); %correlation between underlying SR and each feature
    end

    Pval2(1) = P2{1}(1,2);
    Pval2(2) = P2{2}(1,2);
    Pval2(3) = P2{3}(1,2);
    Pval2(4) = P2{4}(1,2);
    Pval2(5) = P2{5}(1,2);

% Indexing significant correlations
    for i = 1: 5   
        [idx2,num2] = find(Pval2(:) < 0.05);
    end
 end